from elasticsearch import Elasticsearch
import json
import logging

# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "insert password"

# Found in the 'Manage Deployment' page
CLOUD_ID = "insert cloud id"

# Create the client instance
client = Elasticsearch(
    cloud_id=CLOUD_ID,
    basic_auth=("elastic", ELASTIC_PASSWORD)
)

# Successful response!
print(client.info())
# {'name': 'instance-0000000000', 'cluster_name': ...}

db = client.Zeblytics
collection = db.addressData

counter = 1

for d in collection.find({}):
    inputHash = d['inputHash']
    inputIndex = d['inputIndex']
    print(d['outputAddress'])
    if inputHash == '0000000000000000000000000000000000000000000000000000000000000000':
        query = {
                "$set": {
                    "inputAddress": 'ORIGIN'
                }
            }
        collection.update_one(d, query)

    else:
        try:
            search = collection.find_one({'TransactionID': inputHash, 'outputIndex': inputIndex})
            query = {
                "$set": {
                    "inputAddress": search['outputAddress']
                }
            }
            collection.update_one(d, query)
            print('Updated')
        except:
            query = {
                "$set": {
                    "inputAddress": 'ORIGIN'
                }
            }
            collection.update_one(d, query)
    print('Updated: ' + str(counter) + '/' + str(total))
    print('   ')
    counter = counter + 1

def connect_elasticsearch():
    _es = None
    _es = Elasticsearch([{'host': 'localhost', 'port': 9200,"scheme": "http"}])
    if _es.ping():
        print('Yay Connect')
    else:
        print('Awww it could not connect!')
    return _es

def store_record(elastic_object, index_name, record):
    try:
        outcome = elastic_object.index(index=index_name, doc_type='_doc', document=record)
        #print(outcome)
    except Exception as ex:
        print('Error in indexing data')
        print(str(ex))


_es = connect_elasticsearch()


if(_es.ping()):
    i = 1
    doc = collection.find({},{'_id': 0,'inputAddress':0},limit=5000000)
    for x in doc:
        try:
            print('Indexed ' + str(i) + '/5000000')
            store_record(_es,'zeblytics',x)
            collection.delete_one(x)
            i = i + 1
        except:
            pass